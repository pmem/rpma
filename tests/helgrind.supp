#
# The following suppressions are suited for debug build
# of librpma on Ubuntu 20.04 used in the CircleCI.
# They may not work for any other OS, OS version,
# rdma-core version and for the release build.
#

#
# Assessment: These suppressions indicate a lack of MT safety.
# 
# The rpma_log_default_function uses static void get_timestamp_prefix(char *buf, size_t buf_size).
# Definition:
# static void
# get_timestamp_prefix(char *buf, size_t buf_size)
# {
# 	struct tm *info;
# 	char date[24];
# 	struct timespec ts;
# 	long usec;
# 
# 	const char error_message[] = "[time error] ";
# 
# 	if (clock_gettime(CLOCK_REALTIME, &ts) ||
# 	    (NULL == (info = localtime(&ts.tv_sec)))) {
# 		memcpy(buf, error_message, sizeof(error_message));
# 		return;
# 	}
# 
# localtime() here is not threadsafe because it stores the result (struct tm *) in a static variable.
# struct tm *localtime(time_t *timer)
# {
#   static struct tm tt;
#   ... setting tt member variables
#   return &tt;
# }
# If more than one thread call this function then a value of the returned pointer is unpredictable.

{
   Race while reading the name of time zone ("GMT").
   Helgrind:Race
   ...
   fun:__tzfile_compute
   fun:__tz_convert
   fun:__vsyslog_internal
   fun:syslog
   fun:rpma_log_default_function
   ...
}

{
   Race while reading the name of time zone ("GMT").
   Helgrind:Race
   fun:strcmp
   fun:__tzfile_compute
   fun:__tz_convert
   fun:get_timestamp_prefix
   fun:rpma_log_default_function
   ...
}

{
   Race while reading the name of time zone ("GMT").
   Helgrind:Race
   fun:bcmp
   fun:__tzstring_len
   fun:__tzstring
   fun:__tzfile_compute
   fun:__tz_convert
   fun:get_timestamp_prefix
   fun:rpma_log_default_function
   ...
}

#
# Assessment: These suppressions do not indicate a lack of MT safety.
#
# For details please see drd.supp.
#

{
   Possible data race during write of size 4
   Helgrind:Race
   fun:ucma_init
   ...
}

#
# Assessment: These suppressions indicate a lack of MT safety.
#
# The rpma_utils_get_ibv_context() function calls rpma_info_bind_addr.
# If it is called by many threads then every one of them tries to bind different
# ID to the local address. This function should be called by a single thread.
{
   Possible data race during write of size 4
   Helgrind:Race
   fun:ucma_set_af_ib_support
   fun:ucma_init
   fun:ucma_init
   fun:rdma_getaddrinfo
   fun:rpma_info_new
   fun:rpma_utils_get_ibv_context
   ...
}

{
   Possible data race during read of size 8
   Helgrind:Race
   fun:rdma_create_event_channel
   fun:ucma_alloc_id
   fun:rdma_create_id2.part.0
   fun:rpma_utils_get_ibv_context
   ...
}

{
   Possible data race during read of size 4
   Helgrind:Race
   fun:UnknownInlinedFun
   fun:ucma_insert_id
   fun:rdma_create_id2.part.0
   fun:rpma_utils_get_ibv_context
   ...
}

# Occurs in traces of:
# - rpma_utils_get_ibv_context
# - rpma_ep_listen
# - rpma_info_new (ucma_set_af_ib_support)
{
   Possible data race during read of size 8
   Helgrind:Race
   fun:idm_set
   fun:ucma_insert_id
   fun:rdma_create_id2.part.0
   ...
}

{
   Possible data race during read of size 1
   Helgrind:Race
   fun:strlen
   fun:__vfprintf_internal
   fun:__vasprintf_internal
   fun:__asprintf_chk
   fun:asprintf
   fun:open_cdev
   fun:rdma_create_event_channel
   fun:ucma_alloc_id
   fun:rdma_create_id2.part.0
   fun:rpma_utils_get_ibv_context
   ...
}

{
   Possible data race during read of size 4
   Helgrind:Race
   fun:rdma_bind_addr
   fun:rpma_info_bind_addr
   fun:rpma_utils_get_ibv_context
   ...
}

{
   Possible data race during read of size 4
   Helgrind:Race
   fun:ucma_get_device
   fun:ucma_query_route
   fun:rdma_bind_addr
   fun:rpma_info_bind_addr
   fun:rpma_utils_get_ibv_context
   ...
}

{
   Possible data race during read of size 4
   Helgrind:Race
   fun:ucma_get_device
   fun:ucma_query_addr
   fun:rdma_bind_addr2
   fun:rdma_bind_addr
   fun:rpma_info_bind_addr
   fun:rpma_utils_get_ibv_context
   ...
}

# Occurs in traces of:
# - rpma_utils_get_ibv_context
# - rpma_ep_shutdown
# - rpma_info_new (ucma_set_af_ib_support)
{
   Possible data race during read of size 8
   Helgrind:Race
   fun:idm_clear
   fun:ucma_remove_id
   fun:ucma_free_id
   fun:rdma_destroy_id
   ...
}

{
   Possible data race during read of size 4
   Helgrind:Race
   fun:ibv_dontfork_range
   fun:ibv_reg_mr_iova*
   fun:__ibv_reg_mr
   fun:rpma_peer_mr_reg
   fun:rpma_mr_reg
   ...
}

{
   Possible data race during read of size 4
   Helgrind:Race
   fun:ibv_dofork_range
   fun:ibv_dereg_mr*
   fun:rpma_mr_dereg
   ...
}

# Occurs in traces of:
# - rpma_conn_req_new
# - rpma_conn_req_from_id
{
   Possible data race during read/write of size 8
   Helgrind:Race
   ...
   fun:_execute_ioctl_fallback
   ...
}
