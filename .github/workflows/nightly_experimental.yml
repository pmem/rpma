#
# Builds using very experimental OS distributions that can fail very often.
#
# It is run at 00:00 UTC every day or on demand.
#

name: Nightly_Experimental

on:
  workflow_dispatch:
  schedule:
    - cron:  '0 0 * * *'

env:
    GITHUB_REPO: pmem/rpma
    # use GitHub Container Registry as a repository of docker images
    GH_CR_ADDR:  ghcr.io
    DOCKER_REPO: ghcr.io/pmem/rpma
    # use org's Private Access Token to log in to GitHub Container Registry
    GH_CR_USER:  ${{ secrets.GH_CR_USER }}
    GH_CR_PAT:   ${{ secrets.GH_CR_PAT }}
    DOC_UPDATE_GITHUB_TOKEN: ${{ secrets.DOC_UPDATE_GITHUB_TOKEN }}
    HOST_WORKDIR: /home/runner/work/rpma/rpma
    WORKDIR:      utils/docker
    TYPE:         normal

jobs:
  experimental:
    name: experimental
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        CONFIG: ["N=Fedora_Rawhide            OS=fedora  OS_VER=rawhide  CC=gcc    CI_SANITS=ON   PUSH_IMAGE=0",
                 "N=Fedora_Rawhide_SANITS     OS=fedora  OS_VER=rawhide  CC=clang  CI_SANITS=ON   PUSH_IMAGE=0",
                 "N=Fedora_Rawhide_no_SANITS  OS=fedora  OS_VER=rawhide  CC=clang  CI_SANITS=OFF  PUSH_IMAGE=1  REBUILD_ALWAYS=YES",
                 "N=OpenSUSE_Tumbleweed OS=opensuse-tumbleweed OS_VER=latest CC=gcc CI_SANITS=ON  PUSH_IMAGE=1  REBUILD_ALWAYS=YES"]
    steps:
       - name: Clone the git repo
         uses: actions/checkout@v1

       - name: Pull or rebuild the image
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./pull-or-rebuild-image.sh

       - name: Run the build
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./build.sh

       - name: Push the image
         run: cd $WORKDIR && source ./set-vars.sh && ${{ matrix.CONFIG }} /bin/bash -c "if [[ -f ${CI_FILE_PUSH_IMAGE_TO_REPO} ]]; then images/push-image.sh; fi"
