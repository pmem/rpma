
name: RPMA
on: [push, pull_request]

env:
    GITHUB_REPO: pmem/rpma
    # use GitHub Container Registry as a repository of docker images
    GH_CR_ADDR:  ghcr.io
    DOCKER_REPO: ghcr.io/pmem/rpma
    # use org's Private Access Token to log in to GitHub Container Registry
    GH_CR_USER:  ${{ secrets.GH_CR_USER }}
    GH_CR_PAT:   ${{ secrets.GH_CR_PAT }}
    DOC_UPDATE_GITHUB_TOKEN: ${{ secrets.DOC_UPDATE_GITHUB_TOKEN }}
    HOST_WORKDIR: /home/runner/work/rpma/rpma
    WORKDIR:      utils/docker

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        CONFIG: ["N=1 OS=ubuntu OS_VER=21.04 TYPE=normal CC=gcc   COVERAGE=1",
                 "N=2 OS=ubuntu OS_VER=21.04 TYPE=normal CC=clang PUSH_IMAGE=1",
                 "N=3 OS=fedora OS_VER=34    TYPE=normal CC=gcc   PUSH_IMAGE=1",
                 "N=4 OS=fedora OS_VER=34    TYPE=normal CC=clang AUTO_DOC_UPDATE=1",
                 # Debian 9 has older Python v3.5.3 (and pylint3 v1.6.5)
                 "N=5 OS=debian OS_VER=9     TYPE=normal CC=gcc   PUSH_IMAGE=1"]
               # "N=5 OS=ubuntu OS_VER=20.04 TYPE=coverity CC=gcc"]
    steps:
       - name: Clone the git repo
         uses: actions/checkout@v1

       - name: Pull or rebuild the image
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./pull-or-rebuild-image.sh

       - name: Run the build
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./build.sh

       - name: Push the image
         run: cd $WORKDIR && source ./set-vars.sh && ${{ matrix.CONFIG }} /bin/bash -c "if [[ -f ${CI_FILE_PUSH_IMAGE_TO_REPO} ]]; then images/push-image.sh; fi"
