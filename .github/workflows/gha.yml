
name: RPMA
on: [push, pull_request]

env:
    GITHUB_REPO:    pmem/rpma
    DOCKERHUB_REPO: pmem/rpma

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USER:          ${{ secrets.DOCKERHUB_USER }}
      DOCKERHUB_PASSWORD:      ${{ secrets.DOCKERHUB_PASSWORD }}
      DOC_UPDATE_GITHUB_TOKEN: ${{ secrets.DOC_UPDATE_GITHUB_TOKEN }}
      HOST_WORKDIR:            /home/runner/work/rpma/rpma
      WORKDIR:                 utils/docker
      TYPE:                    normal
      PUSH_IMAGE:              1
    strategy:
      matrix:
        CONFIG: ["N=1 OS=ubuntu OS_VER=19.10",
                 "N=2 OS=ubuntu OS_VER=19.10 PUSH_IMAGE=0 COVERAGE=1",
                 "N=3 OS=ubuntu OS_VER=19.10 PUSH_IMAGE=0 TYPE=coverity",
                 "N=4 OS=fedora OS_VER=31 AUTO_DOC_UPDATE=1",
                 "N=5 OS=archlinux-base OS_VER=latest",
                 "N=6 OS=centos OS_VER=8",
                 "N=7 OS=debian OS_VER=testing",
                 "N=8 OS=debian OS_VER=unstable",
                 "N=9 OS=fedora OS_VER=rawhide",
                 "N=10 OS=opensuse-leap OS_VER=latest",
                 "N=11 OS=opensuse-tumbleweed OS_VER=latest",
                 "N=12 OS=ubuntu OS_VER=rolling"]
    steps:
       - name: Clone the git repo
         uses: actions/checkout@v1

       - name: Pull or rebuild the image
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./pull-or-rebuild-image.sh

       - name: Run the build
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./build.sh

       - name: Push the image
         run: cd $WORKDIR && source ./set-vars.sh && ${{ matrix.CONFIG }} /bin/bash -c "if [[ -f ${CI_FILE_PUSH_IMAGE_TO_REPO} ]]; then images/push-image.sh; fi"
