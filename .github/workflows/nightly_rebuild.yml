#
# Builds containing rolling/testing/experimental OS distributions
# which are updated very frequently and because of that
# their docker images should be rebuilt every time.
#
# It is run at 00:00 UTC every day or on demand.
#

name: Nightly_Rebuild

on:
  workflow_dispatch:
  schedule:
    - cron:  '0 0 * * *'

env:
    GITHUB_REPO: pmem/rpma
    # use GitHub Container Registry as a repository of docker images
    GH_CR_ADDR:  ghcr.io
    DOCKER_REPO: ghcr.io/pmem/rpma
    # use org's Private Access Token to log in to GitHub Container Registry
    GH_CR_USER:  ${{ secrets.GH_CR_USER }}
    GH_CR_PAT:   ${{ secrets.GH_CR_PAT }}
    DOC_UPDATE_GITHUB_TOKEN: ${{ secrets.DOC_UPDATE_GITHUB_TOKEN }}
    HOST_WORKDIR: /home/runner/work/rpma/rpma
    WORKDIR:      utils/docker
    TYPE:         normal

jobs:
  gcc:
    name: GCC
    runs-on: ubuntu-latest
    env:
       CC:         gcc
       PUSH_IMAGE: 1
    strategy:
      fail-fast: false
      matrix:
        # only rolling/testing/experimental distributions with rebuild:
        CONFIG: ["N=Ubuntu_Rolling       OS=ubuntu               OS_VER=rolling        REBUILD_ALWAYS=YES",
                 # the Fedora_Rawhide build was moved to Nightly_Experimental
                 "N=Debian_Testing       OS=debian               OS_VER=testing        REBUILD_ALWAYS=YES",
                 "N=Debian_Experimental  OS=debian               OS_VER=experimental   REBUILD_ALWAYS=YES",
                 "N=Arch_Linux_Latest    OS=archlinux            OS_VER=latest         REBUILD_ALWAYS=YES",
                 "N=CentOS_Stream        OS=centos               OS_VER=stream         REBUILD_ALWAYS=YES",
                 # the OpenSUSE_Tumbleweed build was temporarily moved to Nightly_Experimental
                 # because of the following bug:
                 # https://bugzilla.opensuse.org/show_bug.cgi?id=1190670
                 "N=OpenSUSE_Leap        OS=opensuse-leap        OS_VER=latest         REBUILD_ALWAYS=YES"]
    steps:
       - name: Clone the git repo
         uses: actions/checkout@v1

       - name: Pull or rebuild the image
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./pull-or-rebuild-image.sh

       - name: Run the build
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./build.sh

       - name: Push the image
         run: cd $WORKDIR && source ./set-vars.sh && ${{ matrix.CONFIG }} /bin/bash -c "if [[ -f ${CI_FILE_PUSH_IMAGE_TO_REPO} ]]; then images/push-image.sh; fi"
