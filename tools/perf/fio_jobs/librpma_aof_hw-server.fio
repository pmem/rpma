[global]
ioengine=librpma_aof_server
create_serialize=0 # (required) forces specific initiation sequence
kb_base=1000 # turn on the straight units handling (non-compatibility mode)
serverip=${serverip}
port=7204
thread

# The server side spawns one thread for each expected connection from
# the client-side, opens and registers the range dedicated for this thread
# (a workspace) from the provided memory.
# Each of the server threads accepts a connection on the dedicated port
# (different for each and every working thread), accepts and executes flush
# requests, and sends back a flush response for each of the requests.
# When the client is done it sends the termination notice to the server's thread.

[server]
mode=hw
# set to 1 (true) ONLY when Direct Write to PMem from the remote host is possible
# (https://pmem.io/rpma/documentation/basic-direct-write-to-pmem.html)
direct_write_to_pmem=${direct_write_to_pmem}
numjobs=${numjobs}
iodepth=${iodepth}
size=100MiB
filename=${filename}

# The client will terminate the server when the client will end up its job.
time_based
runtime=365d
